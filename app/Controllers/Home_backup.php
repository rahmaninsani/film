<?php

use JetBrains\PhpStorm\Language;

class Home extends Controller
{
  public function index()
  {
    $nowPlaying = $this->getNowPlaying();
    $popular = $this->getPopularMovies();

    for($i = 0; $i < count($popular); $i++) {
      $popular[$i]["overview"] = $this->translateCoba($popular[$i]['overview']);
    } 

    $data = [
      'title' => 'Home',
      'nowPlaying' => $nowPlaying,
      'popular' => $popular,
    ];
    
    $this->view('layout/header', $data);
    $this->view('home/index', $data);
    $this->view('layout/footer');
  }

  public function getNowPlaying()
  {
    $request = "https://api.themoviedb.org/3/movie/now_playing?api_key=469d97658ba36c86f1add30db4d49b25&language=en-US&page=1";
    $json = file_get_contents($request);
    $arr = json_decode($json, TRUE);
    $result = $arr["results"];
    
    return $result;
  }

  public function getPopularMovies()
  {
    $request = "https://api.themoviedb.org/3/movie/popular?api_key=469d97658ba36c86f1add30db4d49b25&language=en-US&page=1";
    $json = file_get_contents($request);
    $arr = json_decode($json, TRUE);
    $result = $arr["results"];

    return $result; 

  }

  private function detectLanguange($text)
  {
    $text = urlencode($text);

    $curl = curl_init();

    curl_setopt_array($curl, [
      CURLOPT_URL => "https://google-translate1.p.rapidapi.com/language/translate/v2/detect",
      CURLOPT_RETURNTRANSFER => true,
      CURLOPT_FOLLOWLOCATION => true,
      CURLOPT_ENCODING => "",
      CURLOPT_MAXREDIRS => 10,
      CURLOPT_TIMEOUT => 30,
      CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
      CURLOPT_CUSTOMREQUEST => "POST",
      CURLOPT_POSTFIELDS => "q=$text",
      CURLOPT_HTTPHEADER => [
        "accept-encoding: application/gzip",
        "content-type: application/x-www-form-urlencoded",
        "x-rapidapi-host: google-translate1.p.rapidapi.com",
        "x-rapidapi-key: 100c74d725msh3f95fe0d7126a2dp15ff62jsnefdced790d12"
      ],
    ]);

    $response = curl_exec($curl);
    $err = curl_error($curl);

    curl_close($curl);

    if ($err) {
      echo "cURL Error #:" . $err;
      return;
    } 
    
    $arr = json_decode($response, TRUE);
    $language = $arr["data"]["detections"][0][0]["language"];
    
    $this->translate($text, $language);
    
  }

  private function translate($text, $language)
  {
    $curl = curl_init();

    curl_setopt_array($curl, [
      CURLOPT_URL => "https://google-translate1.p.rapidapi.com/language/translate/v2",
      CURLOPT_RETURNTRANSFER => true,
      CURLOPT_FOLLOWLOCATION => true,
      CURLOPT_ENCODING => "",
      CURLOPT_MAXREDIRS => 10,
      CURLOPT_TIMEOUT => 30,
      CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
      CURLOPT_CUSTOMREQUEST => "POST",
      CURLOPT_POSTFIELDS => "q=$text&target=id&source=$language",
      CURLOPT_HTTPHEADER => [
        "accept-encoding: application/gzip",
        "content-type: application/x-www-form-urlencoded",
        "x-rapidapi-host: google-translate1.p.rapidapi.com",
        "x-rapidapi-key: 100c74d725msh3f95fe0d7126a2dp15ff62jsnefdced790d12"
      ],
    ]);

    $response = curl_exec($curl);
    $err = curl_error($curl);

    curl_close($curl);

    if ($err) {
      echo "cURL Error #:" . $err;
      return;
    }
      
    $arr = json_decode($response, TRUE);
    $result = $arr["data"]["translations"][0]["translatedText"];
    
    echo $result; 
  }

  public function getVideo($keyword)
  {
    $keyword = urlencode($keyword . " Trailer");  

    // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
    $ch = curl_init();

    curl_setopt($ch, CURLOPT_URL, "https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=1&q=$keyword&key=AIzaSyCNw7S2IYVqIv-AL2g3eLVfXQwi6ttotIg");
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');

    curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');

    $headers = array();
    // $headers[] = 'Authorization: Bearer [YOUR_ACCESS_TOKEN]';
    $headers[] = 'Accept: application/json';
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

    $result = curl_exec($ch);
    if (curl_errno($ch)) {
      echo 'Error:' . curl_error($ch);
    }
    curl_close($ch);

    $arr = json_decode($result, TRUE);
    //$result = $arr['items'][0]['id']['videoId'];
    
    return $arr;
  }

  function translateText($text){
    $curl = curl_init(); 

    curl_setopt($curl, CURLOPT_URL, 'https://translate.googleapis.com/translate_a/single?client=gtx&sl=en&tl=id&dt=t&q='.urlencode($text));
    
    curl_setopt($curl, CURLOPT_BINARYTRANSFER, true);
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($curl, CURLOPT_CUSTOMREQUEST, 'GET');

    $response = curl_exec($curl);
    $err = curl_error($curl);

    curl_close($curl);

    if ($err) {
      echo "cURL Error #:" . $err;
      return;
    }
      
    $arr = json_decode($response, TRUE);
    //$result = $arr;
    
    print_r($response);
  }

  public function wikipedia()
  {
    $url = 'https://id.wikipedia.org/w/api.php?action=query&format=json&uselang=id&list=search&srsearch=Black%20Widow';
    //$url2 = 'https://en.wikipedia.org/w/api.php?action=query&format=json&prop=langlinks&titles=Indonesia&lllang=id&lllimit=100';
    $q = "Supervillains Harley Quinn, Bloodsport, Peacemaker and a collection of nutty cons at Belle Reve prison join the super-secret, super-shady Task Force X as they are dropped off at the remote, enemy-infused island of Corto Maltese.";
    $url = "https://clients5.google.com/translate_a/t?client=dict-chrome-ex&sl=auto&tl=id&q=".urlencode($q);
    $json = file_get_contents($url);
    $arr = json_decode($json, TRUE);
    // $result = $arr['query']['search'][0]['snippet'];
    $result = $arr['sentences'][0]['trans'];
    
    echo $result;
    // print_r($arr);
  }

  public function translateCoba($text)
  {
    $text = urlencode($text);
    $request = "https://clients5.google.com/translate_a/t?client=dict-chrome-ex&sl=auto&tl=id&q=$text";
    $json = file_get_contents($request);
    $arr = json_decode($json, TRUE);
    $result = $arr['sentences'][0]['trans'];

    return $result; 

  }
  
}

?>